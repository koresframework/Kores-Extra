buildscript {
    ext.kotlin_version = '1.5.30'
    ext.dokka_version = '1.5.0'

    repositories {
        maven { url 'https://dl.bintray.com/kotlin/dokka' }
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

plugins {
    id 'com.github.hierynomus.license' version '0.16.1'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

group 'com.github.jonathanxd'
version '1.6.0'

// IDE
apply plugin: 'idea'
apply plugin: 'eclipse'

// Programming Language
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'java'

// License
apply plugin: 'license'

// Shade
apply plugin: 'com.github.johnrengelman.shadow'

// Publish
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/dokka' }
    // JwIUtils
    maven {
        url "https://gitlab.com/api/v4/projects/28895078/packages/maven"
    }
    maven {
        url 'https://gitlab.com/api/v4/projects/28894889/packages/maven'
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "16"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "16"
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.0-rc2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0-rc2'

    // Utilities
    api "com.koresframework:kores:4.2.8.base"

    implementation "com.github.jonathanxd:jwiutils:4.17.8"
    implementation "com.github.jonathanxd:jwiutils-kt:4.17.8"

    testImplementation "com.google.testing.compile:compile-testing:0.19"
    testImplementation "junit:junit:4.12"
    testImplementation files("${System.properties['java.home']}/../libs/tools.jar")
}

// Tasks
jar {
    from "$rootProject.rootDir/LICENSE"

    manifest {
        attributes 'Implementation-Title': baseName,
                'Implementation-Version': version
    }
}

shadowJar {
    classifier = 'shaded'
}

tasks.dokkaJekyll.configure {
    enabled = true
    outputDirectory = rootDir.toPath().resolve("docs").toFile()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: dokkaJekyll) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives shadowJar
}


license {
    ext.name = project.name
    ext.description = project.description
    ext.organization = project.organization
    ext.url = project.url
    ext.year = Calendar.getInstance().get(Calendar.YEAR)

    exclude "**/*.info"
    exclude "**/*.md"
    exclude "res/**"
    exclude "src/main/resources/**"
    exclude "src/test/resources/**"

    header rootProject.file('LICENSE_HEADER')

    sourceSets = project.sourceSets

    ignoreFailures false
    strictCheck true

    mapping {
        java = 'SLASHSTAR_STYLE'
        kt = 'SLASHSTAR_STYLE'
    }
}

publishing {
    repositories {
        maven {
            name = "Local"
            // change to point to your repo, e.g. http://my.org/repo
            url = "$buildDir/repo"
        }
        maven {
            name = "GitLab"
            url "https://gitlab.com/api/v4/projects/29289915/packages/maven"
            credentials(HttpHeaderCredentials) {
                def ciToken = System.getenv("CI_JOB_TOKEN")
                if (ciToken != null && !ciToken.isEmpty()) {
                    name = "Job-Token"
                    value = System.getenv("CI_JOB_TOKEN")
                } else {
                    name = "Private-Token"
                    value = project.findProperty("GITLAB_TOKEN") ?: System.getenv("GITLAB_TOKEN")
                }
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from components.kotlin
            artifactId 'kores-extra'

            artifact sourcesJar
        }
    }
}